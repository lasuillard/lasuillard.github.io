name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions: read-all

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install PNPM deps
        run: pnpm install

      - name: Check code formatting
        run: pnpm exec prettier --check .

      - name: Lint code
        run: pnpm exec eslint .

      - name: Run type checks
        run: pnpm exec tsc --noEmit

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install PNPM deps
        run: pnpm install

      - name: Run tests
        run: pnpm run test

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: coverage/clover.xml
          flags: unit

  e2e-test:
    name: E2E Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install PNPM deps
        run: pnpm install

      # https://github.com/microsoft/playwright/issues/7249
      - name: Store Playwright version as env
        run: |
          PLAYWRIGHT_VERSION="$(pnpm exec playwright --version | cut -d' ' -f2)"
          echo "Playwright version is ${PLAYWRIGHT_VERSION}"
          echo "PLAYWRIGHT_VERSION=${PLAYWRIGHT_VERSION}" >> ${GITHUB_ENV}

      - name: Cache Playwright browsers
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright browsers
        if: ${{ steps.cache-playwright-browsers.outputs.cache-hit != 'true' }}
        run: pnpm exec playwright install --with-deps

      - name: Run end-to-end tests
        run: pnpm run e2e

      - name: Upload Playwright reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-artifacts
          path: |
            playwright-report/
            test-results/
          retention-days: 7

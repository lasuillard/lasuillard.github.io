name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.devcontainer/**'
      - '.vscode/**'
      - '**.md'
      - '!posts/**.md'
      - '!tests/fixtures/posts/**.md'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.devcontainer/**'
      - '.vscode/**'
      - '**.md'
      - '!posts/**.md'
      - '!tests/fixtures/posts/**.md'
  workflow_dispatch:

permissions: read-all

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PNPM
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: pnpm

      - name: Install PNPM deps
        run: pnpm install

      # https://github.com/microsoft/playwright/issues/7249
      - name: Store Playwright version as env
        run: |
          PLAYWRIGHT_VERSION="$(pnpm exec playwright --version | cut -d' ' -f2)"
          echo "Playwright version is ${PLAYWRIGHT_VERSION}"
          echo "PLAYWRIGHT_VERSION=${PLAYWRIGHT_VERSION}" >> ${GITHUB_ENV}

      - name: Cache Playwright browsers
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright browsers
        if: ${{ steps.cache-playwright-browsers.outputs.cache-hit != 'true' }}
        run: pnpm exec playwright install --with-deps

      - name: Check code formatting
        run: pnpm exec prettier --check .

      - name: Lint code
        run: pnpm exec eslint .

      - name: Run type checks
        run: pnpm exec tsc --noEmit

      - name: Run tests
        run: pnpm run test

      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: coverage/clover.xml
          flags: unit

      - name: Run end-to-end tests
        run: pnpm run e2e

      - name: Upload Playwright reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-artifacts
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: Build site
        run: pnpm run build

      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        if: ${{ github.event_name == 'push' }}
        with:
          path: build/

  deploy:
    name: Deploy
    needs: build
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      pages: write
      id-token: write
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  lighthouse:
    name: Lighthouse
    needs: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        with:
          runs: 3
          configPath: ./.lighthouserc.json
          budgetPath: ./budget.json
          urls: |
            ${{ needs.deploy.outputs.page_url }}/
            ${{ needs.deploy.outputs.page_url }}/about-me
            ${{ needs.deploy.outputs.page_url }}/blog
          temporaryPublicStorage: true
